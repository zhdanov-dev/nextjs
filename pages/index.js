import styles from '../styles/Home.module.scss';
import Head from "next/head";
import Button from "../components/button/button.jsx";
import RadioButton from "../components/radioButton/radioButton.jsx";
import Select from "../components/select/select.jsx";
import Header from "../components/header/header.jsx";
import { useState } from 'react';

export default function Home(props) {

  const [activeQuestion, setActiveQuestion] = useState(0);

  if (!props) 'Loading...'

  function changeActiveQuestion(number) {
    setActiveQuestion(number);
  }

  return (
		<>
			<Head>
				<title>NesxJs</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<main className={styles.container}>
				<Select
					onClick={changeActiveQuestion}
					activeQuestion={activeQuestion}
					question={props.data.length}
				/>
				<div className={styles.header__and__content}>
					<Header
						text={'Великая отечественная война'}
						questions={props.data.length}
					/>
					<div className={styles.content__container}>
						<div className={styles.content}>
							{props.data[activeQuestion].img && (
								<img className={styles.img} src={props.data[activeQuestion].img}></img>
							)}
							<div className={styles.question}>
								{props.data[activeQuestion].question}
							</div>
							<div className={styles.answers}>
								<RadioButton text={props.data[activeQuestion].options[0]} />
								<RadioButton text={props.data[activeQuestion].options[1]} />
								<RadioButton text={props.data[activeQuestion].options[2]} />
								<RadioButton text={props.data[activeQuestion].options[3]} />
							</div>
							<div className={styles.buttons}>
								<Button text={'Пропустить'} />
								<Button disabled text={'Ответить'} />
							</div>
						</div>
					</div>
				</div>
			</main>
		</>
	);
}

export async function getServerSideProps(context) {
	const res = await fetch(`http://localhost:5000/`);
	const data = await res.json();
	if (!data) {
		return {
			notFound: true,
		};
	}

	return {
		props: { data },
	};
}
